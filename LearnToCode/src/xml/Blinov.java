package xml;

public class Blinov {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
/**
 * Укажите параметры, которые можно использовать при объявлении
 *  документа xml (3):
	errorPage
2)	version
	schema
4)	encoding
	charset
6)	standalone

Параметры xml-документа: version — номер версией XML, 
encoding — кодировка, standalone — определяет автономность XML.
Ответ: 2, 4, 6.
 * 
 */
/*
 * Укажите вид документа XML, который соответствует следующему
 *  описанию: xml-документ следует синтаксическим правилам XML
 *   и правилам, определенным в его DTD или в XSD (1):
	неправильный xml-документ;
2)	правильный xml-документ;
	неправильно-форматированный xml-документ.
	
	Неправильные документы не следуют синтаксическим правилам XML.
	 Правильные документы следуют синтаксическим правилам XML
	  и правилам, определенным в их DTD или в XSD. 
	  Документы форматированные правильно не имеют DTD или XSD. 
	  Ответ: 2.
 * 
*/

/**
 * Укажите классы, которые входят в состав пакета
 *  javax.xml.parsers (4)
	XMLInputFactory
	XMLStreamReader
3)	DocumentBulider
4)	DocumentBuilderFactory
	Document
6)	SAXParser
7)	SAXParserFactory

JAXP располагается в пакете javax.xml.parsers, в состав 
которого входят четыре класса: 
DocumentBuilder, 
DocumentBuilderFactory, 
SAXParser, SAXParserFactory 
Ответ: 3, 4, 6, 7.
 */

/**
 * Укажите утилиту java-платформы, с 
 * помощью которой возможно обратное создание на 
 * основе XML-схемы классов (1):
	java;
	rmic;
	apt;
4)	xjc.
Возможно обратное создание на основе XML-схемы 
классов на языке Java с помощью команды xjc.exe.
Ответ: 4.
 */

/**
 * Укажите, какие события обрабатывает SАХ-парсер (1):
1)	событие начало документа;
2)	событие конец документа;
3)	событие текстовые данные;
4)	событие начало элемента;
5)	событие конец элемента;
6)	все перечисленные события можно обработать.


К событиям, которые обрабатывает синтаксический анализатор
 SAX, относятся события начала документа, 
 начала элемента, пары значений атрибута, 
 текстовые данные, конец элемента и конец документа.
Ответ: 6.
 */

/**
 * Какой существует способ описания данных в XML? (выберите два)

1) XML использует DTD для описания данных

 XML использует XSL для описания данных

3) XML использует XSD для описания данных

 XML использует CSS для описания данных

Для описания структуры данных используются только XSD и DTD.
XSL используется для преобразований документа XML. 
CSS – каскадная таблица стилей для HTML.

Ответ: 1, 3.
/////////////////////////
Вопрос 16.2.

В каких строках XML документа есть ошибки? (выберите два)

1  <?xml version="1.0"?>

2  <folder>

3    <file><name><contents></contents></name></file>

4    <file><name/><contents></contents><name/></file>

5    <file><name/><contents></contents></name></file>

6    <file><name><contents/><name/></file>

7  </folder>

8 нет ошибок.

В строке 5 для тега </name> отсутствует открывающий тег. 
В строке 6 для тега <name> отсутствует закрывающий тег.

Ответ: 5, 6.
////////////////////////
Вопрос 16.3.

Какое из данных имен не является корректным именем для XML 
элемента? (выберите 2)

1) <hello_dolly>;

2) <big bang>;

3) <xmldocument>;

4) <7up>;

5) только одно имя некорректно.

Имя тега не может содержать пробельные 
символы или начинаться с цифры.
Ответ: 2, 4.
////////////////////////////
Вопрос 16.4.

Значения атрибутов XML всегда должны помещаться
 в …? (выберите два)

1) двойные кавычки “ ”;

2) апострофы ‘ ‘;

3) фигурные скобки { };

4) квадратные скобки [];

5) могут обходиться без ограничивающих символов.

Значения атрибутов XML могут помещаться только в 
двойные кавычки или апострофы.

Ответ: 1, 2.
/////////////////////////////
Вопрос 16.5.

Какие виды событий нельзя обрабатывать с помощью SAX-анализатора?

1) события документа;

2) события загрузки DTD-описаний;

3) события при анализе DTD-описаний;

4) ошибки;

5) все перечисленные события можно обработать.

16.5. 5)
 */





